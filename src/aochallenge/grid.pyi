from typing import Iterator, NamedTuple, TypeAlias, TypeVar

class Coord2D(NamedTuple):
    x: int
    y: int
    def __add__(self, other: Union[Coord2D, tuple[int, int], int]) -> Coord2D: ...
    def __sub__(self, other: Union[Coord2D, tuple[int, int], int]) -> Coord2D: ...

class Coord3D(NamedTuple):
    x: int
    y: int
    z: int
    def __add__(self, other: Union[Coord3D, tuple[int, int, int], int]) -> Coord3D: ...
    def __sub__(self, other: Union[Coord3D, tuple[int, int, int], int]) -> Coord3D: ...

def is_within_2d(coord: _Coord2D, corner1: _Coord2D, corner2: _Coord2D) -> bool: ...
def is_within_3d(coord: _Coord3D, corner1: _Coord3D, corner2: _Coord3D) -> bool: ...
def neighbours_2d(coord: _Coord2D) -> list[Coord2D]: ...
def bounded_neighbours_2d(coord: _Coord2D, corner1: _Coord2D, corner2: _Coord2D) -> list[Coord2D]: ...
def neighbours_full_2d(coord: _Coord2D) -> list[Coord2D]: ...
def bounded_neighbours_full_2d(coord: _Coord2D, corner1: _Coord2D, corner2: _Coord2D) -> list[Coord2D]: ...
def neighbours_3d(coord: _Coord3D) -> list[Coord3D]: ...
def bounded_neighbours_3d(coord: _Coord3D, corner1: _Coord3D, corner2: _Coord3D) -> list[Coord3D]: ...
def neighbours_edge_3d(coord: _Coord3D) -> list[Coord3D]: ...
def bounded_neighbours_edge_3d(coord: _Coord3D, corner1: _Coord3D, corner2: _Coord3D) -> list[Coord3D]: ...
def neighbours_full_3d(coord: _Coord3D) -> list[Coord3D]: ...
def bounded_neighbours_full_3d(coord: _Coord3D, corner1: _Coord3D, corner2: _Coord3D) -> list[Coord3D]: ...
T = TypeVar('T')
Grid2D: TypeAlias
Grid3D: TypeAlias

def set_element_2d(grid: Grid2D[T], pos: _Coord2D, value: T) -> None: ...
def get_element_2d(grid: Grid2D[T], pos: _Coord2D) -> T: ...
def set_element_3d(grid: Grid3D[T], pos: _Coord3D, value: T) -> None: ...
def get_element_3d(grid: Grid3D[T], pos: _Coord3D) -> T: ...
def iter_grid_2d(grid: Grid2D[T]) -> Iterator[tuple[Coord2D, T]]: ...
def iter_grid_3d(grid: Grid3D[T]) -> Iterator[tuple[Coord3D, T]]: ...
Coord = Coord2D
Grid = Grid2D
is_within = is_within_2d
neighbours = neighbours_2d
bounded_neighbours = bounded_neighbours_2d
neighbours_full = neighbours_full_2d
bounded_neighbours_full = bounded_neighbours_full_2d
set_element = set_element_2d
get_element = get_element_2d
iter_grid = iter_grid_2d
